<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>