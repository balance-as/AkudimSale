//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WindowsFormsApplication1.WarehouseService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BalanceWarehouse_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse")]
    public partial class BalanceWarehouse : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WsReturnServerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSEndProgramCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnGeneralSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSLotInfoExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSLotInfoUsedOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPIDExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSItemExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSBinExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSBinIsEmptyOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSItemQaSampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSItemUsesTrackingOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSItemUsesMhdTrackingOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnItemDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnItemUnitOfMesureOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnLotInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnMhdAndBinFromLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnItemNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnPrinterInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSSetPrinterOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSGetBinContentInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSGetItemBinInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSGetItemCrossRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSInventoryAllowedOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSIsFirstInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnSalespersonExtDocNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnRemaningQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnNewPIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSReturnRemaningQtyPickorderOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSFindCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSWhsPostReceiptLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPostPhysicalInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPostTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPostPickOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPostWarehouseShipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPostLotSplitOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPrintPidOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPrintPidPrevOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPrintWarehouseShipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPDFMailOrderConfirmationOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPrintItemLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSPrintBinLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSAddQuantityToPurchaseOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSCreateWarehouseInboundDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSBlockLotNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSSetDefaultBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSCreateLotInfoCleanOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSCreateSalesCommentLineOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BalanceWarehouse() {
            this.Url = global::WindowsFormsApplication1.Properties.Settings.Default.WindowsFormsApplication1_WarehouseService_BalanceWarehouse;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WsReturnServerInfoCompletedEventHandler WsReturnServerInfoCompleted;
        
        /// <remarks/>
        public event WSEndProgramCodeCompletedEventHandler WSEndProgramCodeCompleted;
        
        /// <remarks/>
        public event WSReturnGeneralSetupCompletedEventHandler WSReturnGeneralSetupCompleted;
        
        /// <remarks/>
        public event WSLotInfoExistsCompletedEventHandler WSLotInfoExistsCompleted;
        
        /// <remarks/>
        public event WSLotInfoUsedCompletedEventHandler WSLotInfoUsedCompleted;
        
        /// <remarks/>
        public event WSPIDExistsCompletedEventHandler WSPIDExistsCompleted;
        
        /// <remarks/>
        public event WSItemExistsCompletedEventHandler WSItemExistsCompleted;
        
        /// <remarks/>
        public event WSBinExistsCompletedEventHandler WSBinExistsCompleted;
        
        /// <remarks/>
        public event WSBinIsEmptyCompletedEventHandler WSBinIsEmptyCompleted;
        
        /// <remarks/>
        public event WSItemQaSampleCompletedEventHandler WSItemQaSampleCompleted;
        
        /// <remarks/>
        public event WSItemUsesTrackingCompletedEventHandler WSItemUsesTrackingCompleted;
        
        /// <remarks/>
        public event WSItemUsesMhdTrackingCompletedEventHandler WSItemUsesMhdTrackingCompleted;
        
        /// <remarks/>
        public event WSReturnItemDescriptionCompletedEventHandler WSReturnItemDescriptionCompleted;
        
        /// <remarks/>
        public event WSReturnItemUnitOfMesureCompletedEventHandler WSReturnItemUnitOfMesureCompleted;
        
        /// <remarks/>
        public event WSReturnLotInfoCompletedEventHandler WSReturnLotInfoCompleted;
        
        /// <remarks/>
        public event WSReturnMhdAndBinFromLotCompletedEventHandler WSReturnMhdAndBinFromLotCompleted;
        
        /// <remarks/>
        public event WSReturnItemNoCompletedEventHandler WSReturnItemNoCompleted;
        
        /// <remarks/>
        public event WSReturnPrinterInfoCompletedEventHandler WSReturnPrinterInfoCompleted;
        
        /// <remarks/>
        public event WSSetPrinterCompletedEventHandler WSSetPrinterCompleted;
        
        /// <remarks/>
        public event WSGetBinContentInformationCompletedEventHandler WSGetBinContentInformationCompleted;
        
        /// <remarks/>
        public event WSGetItemBinInformationCompletedEventHandler WSGetItemBinInformationCompleted;
        
        /// <remarks/>
        public event WSGetItemCrossRefCompletedEventHandler WSGetItemCrossRefCompleted;
        
        /// <remarks/>
        public event WSInventoryAllowedCompletedEventHandler WSInventoryAllowedCompleted;
        
        /// <remarks/>
        public event WSIsFirstInventoryCompletedEventHandler WSIsFirstInventoryCompleted;
        
        /// <remarks/>
        public event WSReturnSalespersonExtDocNoCompletedEventHandler WSReturnSalespersonExtDocNoCompleted;
        
        /// <remarks/>
        public event WSReturnRemaningQuantityCompletedEventHandler WSReturnRemaningQuantityCompleted;
        
        /// <remarks/>
        public event WSReturnNewPIDCompletedEventHandler WSReturnNewPIDCompleted;
        
        /// <remarks/>
        public event WSReturnRemaningQtyPickorderCompletedEventHandler WSReturnRemaningQtyPickorderCompleted;
        
        /// <remarks/>
        public event WSFindCustomersCompletedEventHandler WSFindCustomersCompleted;
        
        /// <remarks/>
        public event WSWhsPostReceiptLineCompletedEventHandler WSWhsPostReceiptLineCompleted;
        
        /// <remarks/>
        public event WSPostPhysicalInventoryCompletedEventHandler WSPostPhysicalInventoryCompleted;
        
        /// <remarks/>
        public event WSPostTransferCompletedEventHandler WSPostTransferCompleted;
        
        /// <remarks/>
        public event WSPostPickOrderCompletedEventHandler WSPostPickOrderCompleted;
        
        /// <remarks/>
        public event WSPostWarehouseShipmentCompletedEventHandler WSPostWarehouseShipmentCompleted;
        
        /// <remarks/>
        public event WSPostLotSplitCompletedEventHandler WSPostLotSplitCompleted;
        
        /// <remarks/>
        public event WSPrintPidCompletedEventHandler WSPrintPidCompleted;
        
        /// <remarks/>
        public event WSPrintPidPrevCompletedEventHandler WSPrintPidPrevCompleted;
        
        /// <remarks/>
        public event WSPrintWarehouseShipmentCompletedEventHandler WSPrintWarehouseShipmentCompleted;
        
        /// <remarks/>
        public event WSPDFMailOrderConfirmationCompletedEventHandler WSPDFMailOrderConfirmationCompleted;
        
        /// <remarks/>
        public event WSPrintItemLabelCompletedEventHandler WSPrintItemLabelCompleted;
        
        /// <remarks/>
        public event WSPrintBinLabelCompletedEventHandler WSPrintBinLabelCompleted;
        
        /// <remarks/>
        public event WSAddQuantityToPurchaseOrderCompletedEventHandler WSAddQuantityToPurchaseOrderCompleted;
        
        /// <remarks/>
        public event WSCreateWarehouseInboundDocCompletedEventHandler WSCreateWarehouseInboundDocCompleted;
        
        /// <remarks/>
        public event WSBlockLotNoCompletedEventHandler WSBlockLotNoCompleted;
        
        /// <remarks/>
        public event WSSetDefaultBinCompletedEventHandler WSSetDefaultBinCompleted;
        
        /// <remarks/>
        public event WSCreateLotInfoCleanCompletedEventHandler WSCreateLotInfoCleanCompleted;
        
        /// <remarks/>
        public event WSCreateSalesCommentLineCompletedEventHandler WSCreateSalesCommentLineCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WsReturnServerInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WsReturnServerInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WsReturnServerInfo(ref string sqlServerName, ref string sqlServerInstance, ref string databaseUserName, ref string databaseCompany, ref string languageCode, ref string webURL) {
            object[] results = this.Invoke("WsReturnServerInfo", new object[] {
                        sqlServerName,
                        sqlServerInstance,
                        databaseUserName,
                        databaseCompany,
                        languageCode,
                        webURL});
            sqlServerName = ((string)(results[1]));
            sqlServerInstance = ((string)(results[2]));
            databaseUserName = ((string)(results[3]));
            databaseCompany = ((string)(results[4]));
            languageCode = ((string)(results[5]));
            webURL = ((string)(results[6]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WsReturnServerInfoAsync(string sqlServerName, string sqlServerInstance, string databaseUserName, string databaseCompany, string languageCode, string webURL) {
            this.WsReturnServerInfoAsync(sqlServerName, sqlServerInstance, databaseUserName, databaseCompany, languageCode, webURL, null);
        }
        
        /// <remarks/>
        public void WsReturnServerInfoAsync(string sqlServerName, string sqlServerInstance, string databaseUserName, string databaseCompany, string languageCode, string webURL, object userState) {
            if ((this.WsReturnServerInfoOperationCompleted == null)) {
                this.WsReturnServerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWsReturnServerInfoOperationCompleted);
            }
            this.InvokeAsync("WsReturnServerInfo", new object[] {
                        sqlServerName,
                        sqlServerInstance,
                        databaseUserName,
                        databaseCompany,
                        languageCode,
                        webURL}, this.WsReturnServerInfoOperationCompleted, userState);
        }
        
        private void OnWsReturnServerInfoOperationCompleted(object arg) {
            if ((this.WsReturnServerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WsReturnServerInfoCompleted(this, new WsReturnServerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSEndProgramCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSEndProgramCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSEndProgramCode(string tryCode) {
            object[] results = this.Invoke("WSEndProgramCode", new object[] {
                        tryCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSEndProgramCodeAsync(string tryCode) {
            this.WSEndProgramCodeAsync(tryCode, null);
        }
        
        /// <remarks/>
        public void WSEndProgramCodeAsync(string tryCode, object userState) {
            if ((this.WSEndProgramCodeOperationCompleted == null)) {
                this.WSEndProgramCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSEndProgramCodeOperationCompleted);
            }
            this.InvokeAsync("WSEndProgramCode", new object[] {
                        tryCode}, this.WSEndProgramCodeOperationCompleted, userState);
        }
        
        private void OnWSEndProgramCodeOperationCompleted(object arg) {
            if ((this.WSEndProgramCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSEndProgramCodeCompleted(this, new WSEndProgramCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnGeneralSetup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnGeneralSetup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WSReturnGeneralSetup(ref string soundError, ref string soundOK, ref bool errorMsg) {
            object[] results = this.Invoke("WSReturnGeneralSetup", new object[] {
                        soundError,
                        soundOK,
                        errorMsg});
            soundError = ((string)(results[0]));
            soundOK = ((string)(results[1]));
            errorMsg = ((bool)(results[2]));
        }
        
        /// <remarks/>
        public void WSReturnGeneralSetupAsync(string soundError, string soundOK, bool errorMsg) {
            this.WSReturnGeneralSetupAsync(soundError, soundOK, errorMsg, null);
        }
        
        /// <remarks/>
        public void WSReturnGeneralSetupAsync(string soundError, string soundOK, bool errorMsg, object userState) {
            if ((this.WSReturnGeneralSetupOperationCompleted == null)) {
                this.WSReturnGeneralSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnGeneralSetupOperationCompleted);
            }
            this.InvokeAsync("WSReturnGeneralSetup", new object[] {
                        soundError,
                        soundOK,
                        errorMsg}, this.WSReturnGeneralSetupOperationCompleted, userState);
        }
        
        private void OnWSReturnGeneralSetupOperationCompleted(object arg) {
            if ((this.WSReturnGeneralSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnGeneralSetupCompleted(this, new WSReturnGeneralSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSLotInfoExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSLotInfoExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSLotInfoExists(string itemNoa46, string lotNra46, string vendorLota46) {
            object[] results = this.Invoke("WSLotInfoExists", new object[] {
                        itemNoa46,
                        lotNra46,
                        vendorLota46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSLotInfoExistsAsync(string itemNoa46, string lotNra46, string vendorLota46) {
            this.WSLotInfoExistsAsync(itemNoa46, lotNra46, vendorLota46, null);
        }
        
        /// <remarks/>
        public void WSLotInfoExistsAsync(string itemNoa46, string lotNra46, string vendorLota46, object userState) {
            if ((this.WSLotInfoExistsOperationCompleted == null)) {
                this.WSLotInfoExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSLotInfoExistsOperationCompleted);
            }
            this.InvokeAsync("WSLotInfoExists", new object[] {
                        itemNoa46,
                        lotNra46,
                        vendorLota46}, this.WSLotInfoExistsOperationCompleted, userState);
        }
        
        private void OnWSLotInfoExistsOperationCompleted(object arg) {
            if ((this.WSLotInfoExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSLotInfoExistsCompleted(this, new WSLotInfoExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSLotInfoUsed", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSLotInfoUsed_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSLotInfoUsed(string lotNra46) {
            object[] results = this.Invoke("WSLotInfoUsed", new object[] {
                        lotNra46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSLotInfoUsedAsync(string lotNra46) {
            this.WSLotInfoUsedAsync(lotNra46, null);
        }
        
        /// <remarks/>
        public void WSLotInfoUsedAsync(string lotNra46, object userState) {
            if ((this.WSLotInfoUsedOperationCompleted == null)) {
                this.WSLotInfoUsedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSLotInfoUsedOperationCompleted);
            }
            this.InvokeAsync("WSLotInfoUsed", new object[] {
                        lotNra46}, this.WSLotInfoUsedOperationCompleted, userState);
        }
        
        private void OnWSLotInfoUsedOperationCompleted(object arg) {
            if ((this.WSLotInfoUsedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSLotInfoUsedCompleted(this, new WSLotInfoUsedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPIDExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPIDExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSPIDExists(string lotNra46) {
            object[] results = this.Invoke("WSPIDExists", new object[] {
                        lotNra46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSPIDExistsAsync(string lotNra46) {
            this.WSPIDExistsAsync(lotNra46, null);
        }
        
        /// <remarks/>
        public void WSPIDExistsAsync(string lotNra46, object userState) {
            if ((this.WSPIDExistsOperationCompleted == null)) {
                this.WSPIDExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPIDExistsOperationCompleted);
            }
            this.InvokeAsync("WSPIDExists", new object[] {
                        lotNra46}, this.WSPIDExistsOperationCompleted, userState);
        }
        
        private void OnWSPIDExistsOperationCompleted(object arg) {
            if ((this.WSPIDExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPIDExistsCompleted(this, new WSPIDExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSItemExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSItemExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSItemExists(string itemNo) {
            object[] results = this.Invoke("WSItemExists", new object[] {
                        itemNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSItemExistsAsync(string itemNo) {
            this.WSItemExistsAsync(itemNo, null);
        }
        
        /// <remarks/>
        public void WSItemExistsAsync(string itemNo, object userState) {
            if ((this.WSItemExistsOperationCompleted == null)) {
                this.WSItemExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSItemExistsOperationCompleted);
            }
            this.InvokeAsync("WSItemExists", new object[] {
                        itemNo}, this.WSItemExistsOperationCompleted, userState);
        }
        
        private void OnWSItemExistsOperationCompleted(object arg) {
            if ((this.WSItemExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSItemExistsCompleted(this, new WSItemExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSBinExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSBinExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSBinExists(string locationCode, string binCode) {
            object[] results = this.Invoke("WSBinExists", new object[] {
                        locationCode,
                        binCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSBinExistsAsync(string locationCode, string binCode) {
            this.WSBinExistsAsync(locationCode, binCode, null);
        }
        
        /// <remarks/>
        public void WSBinExistsAsync(string locationCode, string binCode, object userState) {
            if ((this.WSBinExistsOperationCompleted == null)) {
                this.WSBinExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSBinExistsOperationCompleted);
            }
            this.InvokeAsync("WSBinExists", new object[] {
                        locationCode,
                        binCode}, this.WSBinExistsOperationCompleted, userState);
        }
        
        private void OnWSBinExistsOperationCompleted(object arg) {
            if ((this.WSBinExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSBinExistsCompleted(this, new WSBinExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSBinIsEmpty", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSBinIsEmpty_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSBinIsEmpty(string locationCode, string binCode) {
            object[] results = this.Invoke("WSBinIsEmpty", new object[] {
                        locationCode,
                        binCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSBinIsEmptyAsync(string locationCode, string binCode) {
            this.WSBinIsEmptyAsync(locationCode, binCode, null);
        }
        
        /// <remarks/>
        public void WSBinIsEmptyAsync(string locationCode, string binCode, object userState) {
            if ((this.WSBinIsEmptyOperationCompleted == null)) {
                this.WSBinIsEmptyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSBinIsEmptyOperationCompleted);
            }
            this.InvokeAsync("WSBinIsEmpty", new object[] {
                        locationCode,
                        binCode}, this.WSBinIsEmptyOperationCompleted, userState);
        }
        
        private void OnWSBinIsEmptyOperationCompleted(object arg) {
            if ((this.WSBinIsEmptyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSBinIsEmptyCompleted(this, new WSBinIsEmptyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSItemQaSample", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSItemQaSample_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSItemQaSample(string itemNo, ref decimal sampleQty, ref string sampleUnitOfMeasure) {
            object[] results = this.Invoke("WSItemQaSample", new object[] {
                        itemNo,
                        sampleQty,
                        sampleUnitOfMeasure});
            sampleQty = ((decimal)(results[1]));
            sampleUnitOfMeasure = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSItemQaSampleAsync(string itemNo, decimal sampleQty, string sampleUnitOfMeasure) {
            this.WSItemQaSampleAsync(itemNo, sampleQty, sampleUnitOfMeasure, null);
        }
        
        /// <remarks/>
        public void WSItemQaSampleAsync(string itemNo, decimal sampleQty, string sampleUnitOfMeasure, object userState) {
            if ((this.WSItemQaSampleOperationCompleted == null)) {
                this.WSItemQaSampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSItemQaSampleOperationCompleted);
            }
            this.InvokeAsync("WSItemQaSample", new object[] {
                        itemNo,
                        sampleQty,
                        sampleUnitOfMeasure}, this.WSItemQaSampleOperationCompleted, userState);
        }
        
        private void OnWSItemQaSampleOperationCompleted(object arg) {
            if ((this.WSItemQaSampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSItemQaSampleCompleted(this, new WSItemQaSampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSItemUsesTracking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSItemUsesTracking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSItemUsesTracking(string itemNo) {
            object[] results = this.Invoke("WSItemUsesTracking", new object[] {
                        itemNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSItemUsesTrackingAsync(string itemNo) {
            this.WSItemUsesTrackingAsync(itemNo, null);
        }
        
        /// <remarks/>
        public void WSItemUsesTrackingAsync(string itemNo, object userState) {
            if ((this.WSItemUsesTrackingOperationCompleted == null)) {
                this.WSItemUsesTrackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSItemUsesTrackingOperationCompleted);
            }
            this.InvokeAsync("WSItemUsesTracking", new object[] {
                        itemNo}, this.WSItemUsesTrackingOperationCompleted, userState);
        }
        
        private void OnWSItemUsesTrackingOperationCompleted(object arg) {
            if ((this.WSItemUsesTrackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSItemUsesTrackingCompleted(this, new WSItemUsesTrackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSItemUsesMhdTracking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSItemUsesMhdTracking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSItemUsesMhdTracking(string itemNo) {
            object[] results = this.Invoke("WSItemUsesMhdTracking", new object[] {
                        itemNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSItemUsesMhdTrackingAsync(string itemNo) {
            this.WSItemUsesMhdTrackingAsync(itemNo, null);
        }
        
        /// <remarks/>
        public void WSItemUsesMhdTrackingAsync(string itemNo, object userState) {
            if ((this.WSItemUsesMhdTrackingOperationCompleted == null)) {
                this.WSItemUsesMhdTrackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSItemUsesMhdTrackingOperationCompleted);
            }
            this.InvokeAsync("WSItemUsesMhdTracking", new object[] {
                        itemNo}, this.WSItemUsesMhdTrackingOperationCompleted, userState);
        }
        
        private void OnWSItemUsesMhdTrackingOperationCompleted(object arg) {
            if ((this.WSItemUsesMhdTrackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSItemUsesMhdTrackingCompleted(this, new WSItemUsesMhdTrackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnItemDescription", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnItemDescription_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string WSReturnItemDescription(string no) {
            object[] results = this.Invoke("WSReturnItemDescription", new object[] {
                        no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSReturnItemDescriptionAsync(string no) {
            this.WSReturnItemDescriptionAsync(no, null);
        }
        
        /// <remarks/>
        public void WSReturnItemDescriptionAsync(string no, object userState) {
            if ((this.WSReturnItemDescriptionOperationCompleted == null)) {
                this.WSReturnItemDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnItemDescriptionOperationCompleted);
            }
            this.InvokeAsync("WSReturnItemDescription", new object[] {
                        no}, this.WSReturnItemDescriptionOperationCompleted, userState);
        }
        
        private void OnWSReturnItemDescriptionOperationCompleted(object arg) {
            if ((this.WSReturnItemDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnItemDescriptionCompleted(this, new WSReturnItemDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnItemUnitOfMesure" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnItemUnitOfMesure_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string WSReturnItemUnitOfMesure(string no, int type) {
            object[] results = this.Invoke("WSReturnItemUnitOfMesure", new object[] {
                        no,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSReturnItemUnitOfMesureAsync(string no, int type) {
            this.WSReturnItemUnitOfMesureAsync(no, type, null);
        }
        
        /// <remarks/>
        public void WSReturnItemUnitOfMesureAsync(string no, int type, object userState) {
            if ((this.WSReturnItemUnitOfMesureOperationCompleted == null)) {
                this.WSReturnItemUnitOfMesureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnItemUnitOfMesureOperationCompleted);
            }
            this.InvokeAsync("WSReturnItemUnitOfMesure", new object[] {
                        no,
                        type}, this.WSReturnItemUnitOfMesureOperationCompleted, userState);
        }
        
        private void OnWSReturnItemUnitOfMesureOperationCompleted(object arg) {
            if ((this.WSReturnItemUnitOfMesureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnItemUnitOfMesureCompleted(this, new WSReturnItemUnitOfMesureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnLotInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnLotInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSReturnLotInfo(string lotNra46, string location, ref string bin, ref string itemNoa46, ref string description, ref decimal quantity, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] ref System.DateTime expiredate, ref string unitOfMesure, ref string vendorLot) {
            object[] results = this.Invoke("WSReturnLotInfo", new object[] {
                        lotNra46,
                        location,
                        bin,
                        itemNoa46,
                        description,
                        quantity,
                        expiredate,
                        unitOfMesure,
                        vendorLot});
            bin = ((string)(results[1]));
            itemNoa46 = ((string)(results[2]));
            description = ((string)(results[3]));
            quantity = ((decimal)(results[4]));
            expiredate = ((System.DateTime)(results[5]));
            unitOfMesure = ((string)(results[6]));
            vendorLot = ((string)(results[7]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSReturnLotInfoAsync(string lotNra46, string location, string bin, string itemNoa46, string description, decimal quantity, System.DateTime expiredate, string unitOfMesure, string vendorLot) {
            this.WSReturnLotInfoAsync(lotNra46, location, bin, itemNoa46, description, quantity, expiredate, unitOfMesure, vendorLot, null);
        }
        
        /// <remarks/>
        public void WSReturnLotInfoAsync(string lotNra46, string location, string bin, string itemNoa46, string description, decimal quantity, System.DateTime expiredate, string unitOfMesure, string vendorLot, object userState) {
            if ((this.WSReturnLotInfoOperationCompleted == null)) {
                this.WSReturnLotInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnLotInfoOperationCompleted);
            }
            this.InvokeAsync("WSReturnLotInfo", new object[] {
                        lotNra46,
                        location,
                        bin,
                        itemNoa46,
                        description,
                        quantity,
                        expiredate,
                        unitOfMesure,
                        vendorLot}, this.WSReturnLotInfoOperationCompleted, userState);
        }
        
        private void OnWSReturnLotInfoOperationCompleted(object arg) {
            if ((this.WSReturnLotInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnLotInfoCompleted(this, new WSReturnLotInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnMhdAndBinFromLot" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnMhdAndBinFromLot_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSReturnMhdAndBinFromLot(string lotNra46, string itemNo, string location, ref string bin, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] ref System.DateTime mHD, ref decimal qty, ref int appEntry, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] ref System.DateTime regDate) {
            object[] results = this.Invoke("WSReturnMhdAndBinFromLot", new object[] {
                        lotNra46,
                        itemNo,
                        location,
                        bin,
                        mHD,
                        qty,
                        appEntry,
                        regDate});
            bin = ((string)(results[1]));
            mHD = ((System.DateTime)(results[2]));
            qty = ((decimal)(results[3]));
            appEntry = ((int)(results[4]));
            regDate = ((System.DateTime)(results[5]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSReturnMhdAndBinFromLotAsync(string lotNra46, string itemNo, string location, string bin, System.DateTime mHD, decimal qty, int appEntry, System.DateTime regDate) {
            this.WSReturnMhdAndBinFromLotAsync(lotNra46, itemNo, location, bin, mHD, qty, appEntry, regDate, null);
        }
        
        /// <remarks/>
        public void WSReturnMhdAndBinFromLotAsync(string lotNra46, string itemNo, string location, string bin, System.DateTime mHD, decimal qty, int appEntry, System.DateTime regDate, object userState) {
            if ((this.WSReturnMhdAndBinFromLotOperationCompleted == null)) {
                this.WSReturnMhdAndBinFromLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnMhdAndBinFromLotOperationCompleted);
            }
            this.InvokeAsync("WSReturnMhdAndBinFromLot", new object[] {
                        lotNra46,
                        itemNo,
                        location,
                        bin,
                        mHD,
                        qty,
                        appEntry,
                        regDate}, this.WSReturnMhdAndBinFromLotOperationCompleted, userState);
        }
        
        private void OnWSReturnMhdAndBinFromLotOperationCompleted(object arg) {
            if ((this.WSReturnMhdAndBinFromLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnMhdAndBinFromLotCompleted(this, new WSReturnMhdAndBinFromLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnItemNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnItemNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string WSReturnItemNo(string pa45ID) {
            object[] results = this.Invoke("WSReturnItemNo", new object[] {
                        pa45ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSReturnItemNoAsync(string pa45ID) {
            this.WSReturnItemNoAsync(pa45ID, null);
        }
        
        /// <remarks/>
        public void WSReturnItemNoAsync(string pa45ID, object userState) {
            if ((this.WSReturnItemNoOperationCompleted == null)) {
                this.WSReturnItemNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnItemNoOperationCompleted);
            }
            this.InvokeAsync("WSReturnItemNo", new object[] {
                        pa45ID}, this.WSReturnItemNoOperationCompleted, userState);
        }
        
        private void OnWSReturnItemNoOperationCompleted(object arg) {
            if ((this.WSReturnItemNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnItemNoCompleted(this, new WSReturnItemNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnPrinterInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnPrinterInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSReturnPrinterInfo(string userId, string locationCode, ref string printerName) {
            object[] results = this.Invoke("WSReturnPrinterInfo", new object[] {
                        userId,
                        locationCode,
                        printerName});
            printerName = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSReturnPrinterInfoAsync(string userId, string locationCode, string printerName) {
            this.WSReturnPrinterInfoAsync(userId, locationCode, printerName, null);
        }
        
        /// <remarks/>
        public void WSReturnPrinterInfoAsync(string userId, string locationCode, string printerName, object userState) {
            if ((this.WSReturnPrinterInfoOperationCompleted == null)) {
                this.WSReturnPrinterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnPrinterInfoOperationCompleted);
            }
            this.InvokeAsync("WSReturnPrinterInfo", new object[] {
                        userId,
                        locationCode,
                        printerName}, this.WSReturnPrinterInfoOperationCompleted, userState);
        }
        
        private void OnWSReturnPrinterInfoOperationCompleted(object arg) {
            if ((this.WSReturnPrinterInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnPrinterInfoCompleted(this, new WSReturnPrinterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSSetPrinter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSSetPrinter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSSetPrinter(string userId, string locationCode, string newPrinter) {
            object[] results = this.Invoke("WSSetPrinter", new object[] {
                        userId,
                        locationCode,
                        newPrinter});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSSetPrinterAsync(string userId, string locationCode, string newPrinter) {
            this.WSSetPrinterAsync(userId, locationCode, newPrinter, null);
        }
        
        /// <remarks/>
        public void WSSetPrinterAsync(string userId, string locationCode, string newPrinter, object userState) {
            if ((this.WSSetPrinterOperationCompleted == null)) {
                this.WSSetPrinterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSSetPrinterOperationCompleted);
            }
            this.InvokeAsync("WSSetPrinter", new object[] {
                        userId,
                        locationCode,
                        newPrinter}, this.WSSetPrinterOperationCompleted, userState);
        }
        
        private void OnWSSetPrinterOperationCompleted(object arg) {
            if ((this.WSSetPrinterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSSetPrinterCompleted(this, new WSSetPrinterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSGetBinContentInformati" +
            "on", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSGetBinContentInformation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int WSGetBinContentInformation(string userId, string p_LocationCode, string p_BinCode) {
            object[] results = this.Invoke("WSGetBinContentInformation", new object[] {
                        userId,
                        p_LocationCode,
                        p_BinCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void WSGetBinContentInformationAsync(string userId, string p_LocationCode, string p_BinCode) {
            this.WSGetBinContentInformationAsync(userId, p_LocationCode, p_BinCode, null);
        }
        
        /// <remarks/>
        public void WSGetBinContentInformationAsync(string userId, string p_LocationCode, string p_BinCode, object userState) {
            if ((this.WSGetBinContentInformationOperationCompleted == null)) {
                this.WSGetBinContentInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSGetBinContentInformationOperationCompleted);
            }
            this.InvokeAsync("WSGetBinContentInformation", new object[] {
                        userId,
                        p_LocationCode,
                        p_BinCode}, this.WSGetBinContentInformationOperationCompleted, userState);
        }
        
        private void OnWSGetBinContentInformationOperationCompleted(object arg) {
            if ((this.WSGetBinContentInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSGetBinContentInformationCompleted(this, new WSGetBinContentInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSGetItemBinInformation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSGetItemBinInformation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int WSGetItemBinInformation(string userId, string p_LocationCode, string p_ItemNo) {
            object[] results = this.Invoke("WSGetItemBinInformation", new object[] {
                        userId,
                        p_LocationCode,
                        p_ItemNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void WSGetItemBinInformationAsync(string userId, string p_LocationCode, string p_ItemNo) {
            this.WSGetItemBinInformationAsync(userId, p_LocationCode, p_ItemNo, null);
        }
        
        /// <remarks/>
        public void WSGetItemBinInformationAsync(string userId, string p_LocationCode, string p_ItemNo, object userState) {
            if ((this.WSGetItemBinInformationOperationCompleted == null)) {
                this.WSGetItemBinInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSGetItemBinInformationOperationCompleted);
            }
            this.InvokeAsync("WSGetItemBinInformation", new object[] {
                        userId,
                        p_LocationCode,
                        p_ItemNo}, this.WSGetItemBinInformationOperationCompleted, userState);
        }
        
        private void OnWSGetItemBinInformationOperationCompleted(object arg) {
            if ((this.WSGetItemBinInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSGetItemBinInformationCompleted(this, new WSGetItemBinInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSGetItemCrossRef", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSGetItemCrossRef_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string WSGetItemCrossRef(string refNo) {
            object[] results = this.Invoke("WSGetItemCrossRef", new object[] {
                        refNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSGetItemCrossRefAsync(string refNo) {
            this.WSGetItemCrossRefAsync(refNo, null);
        }
        
        /// <remarks/>
        public void WSGetItemCrossRefAsync(string refNo, object userState) {
            if ((this.WSGetItemCrossRefOperationCompleted == null)) {
                this.WSGetItemCrossRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSGetItemCrossRefOperationCompleted);
            }
            this.InvokeAsync("WSGetItemCrossRef", new object[] {
                        refNo}, this.WSGetItemCrossRefOperationCompleted, userState);
        }
        
        private void OnWSGetItemCrossRefOperationCompleted(object arg) {
            if ((this.WSGetItemCrossRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSGetItemCrossRefCompleted(this, new WSGetItemCrossRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSInventoryAllowed", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSInventoryAllowed_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSInventoryAllowed(string lokation, string placering) {
            object[] results = this.Invoke("WSInventoryAllowed", new object[] {
                        lokation,
                        placering});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSInventoryAllowedAsync(string lokation, string placering) {
            this.WSInventoryAllowedAsync(lokation, placering, null);
        }
        
        /// <remarks/>
        public void WSInventoryAllowedAsync(string lokation, string placering, object userState) {
            if ((this.WSInventoryAllowedOperationCompleted == null)) {
                this.WSInventoryAllowedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSInventoryAllowedOperationCompleted);
            }
            this.InvokeAsync("WSInventoryAllowed", new object[] {
                        lokation,
                        placering}, this.WSInventoryAllowedOperationCompleted, userState);
        }
        
        private void OnWSInventoryAllowedOperationCompleted(object arg) {
            if ((this.WSInventoryAllowedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSInventoryAllowedCompleted(this, new WSInventoryAllowedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSIsFirstInventory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSIsFirstInventory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSIsFirstInventory(string locationCode) {
            object[] results = this.Invoke("WSIsFirstInventory", new object[] {
                        locationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSIsFirstInventoryAsync(string locationCode) {
            this.WSIsFirstInventoryAsync(locationCode, null);
        }
        
        /// <remarks/>
        public void WSIsFirstInventoryAsync(string locationCode, object userState) {
            if ((this.WSIsFirstInventoryOperationCompleted == null)) {
                this.WSIsFirstInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSIsFirstInventoryOperationCompleted);
            }
            this.InvokeAsync("WSIsFirstInventory", new object[] {
                        locationCode}, this.WSIsFirstInventoryOperationCompleted, userState);
        }
        
        private void OnWSIsFirstInventoryOperationCompleted(object arg) {
            if ((this.WSIsFirstInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSIsFirstInventoryCompleted(this, new WSIsFirstInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnSalespersonExtDo" +
            "cNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnSalespersonExtDocNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string WSReturnSalespersonExtDocNo() {
            object[] results = this.Invoke("WSReturnSalespersonExtDocNo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSReturnSalespersonExtDocNoAsync() {
            this.WSReturnSalespersonExtDocNoAsync(null);
        }
        
        /// <remarks/>
        public void WSReturnSalespersonExtDocNoAsync(object userState) {
            if ((this.WSReturnSalespersonExtDocNoOperationCompleted == null)) {
                this.WSReturnSalespersonExtDocNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnSalespersonExtDocNoOperationCompleted);
            }
            this.InvokeAsync("WSReturnSalespersonExtDocNo", new object[0], this.WSReturnSalespersonExtDocNoOperationCompleted, userState);
        }
        
        private void OnWSReturnSalespersonExtDocNoOperationCompleted(object arg) {
            if ((this.WSReturnSalespersonExtDocNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnSalespersonExtDocNoCompleted(this, new WSReturnSalespersonExtDocNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnRemaningQuantity" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnRemaningQuantity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal WSReturnRemaningQuantity(int kildetype, string kildeNra46, string itemNoa46) {
            object[] results = this.Invoke("WSReturnRemaningQuantity", new object[] {
                        kildetype,
                        kildeNra46,
                        itemNoa46});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void WSReturnRemaningQuantityAsync(int kildetype, string kildeNra46, string itemNoa46) {
            this.WSReturnRemaningQuantityAsync(kildetype, kildeNra46, itemNoa46, null);
        }
        
        /// <remarks/>
        public void WSReturnRemaningQuantityAsync(int kildetype, string kildeNra46, string itemNoa46, object userState) {
            if ((this.WSReturnRemaningQuantityOperationCompleted == null)) {
                this.WSReturnRemaningQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnRemaningQuantityOperationCompleted);
            }
            this.InvokeAsync("WSReturnRemaningQuantity", new object[] {
                        kildetype,
                        kildeNra46,
                        itemNoa46}, this.WSReturnRemaningQuantityOperationCompleted, userState);
        }
        
        private void OnWSReturnRemaningQuantityOperationCompleted(object arg) {
            if ((this.WSReturnRemaningQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnRemaningQuantityCompleted(this, new WSReturnRemaningQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnNewPID", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnNewPID_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string WSReturnNewPID() {
            object[] results = this.Invoke("WSReturnNewPID", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSReturnNewPIDAsync() {
            this.WSReturnNewPIDAsync(null);
        }
        
        /// <remarks/>
        public void WSReturnNewPIDAsync(object userState) {
            if ((this.WSReturnNewPIDOperationCompleted == null)) {
                this.WSReturnNewPIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnNewPIDOperationCompleted);
            }
            this.InvokeAsync("WSReturnNewPID", new object[0], this.WSReturnNewPIDOperationCompleted, userState);
        }
        
        private void OnWSReturnNewPIDOperationCompleted(object arg) {
            if ((this.WSReturnNewPIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnNewPIDCompleted(this, new WSReturnNewPIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSReturnRemaningQtyPicko" +
            "rder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSReturnRemaningQtyPickorder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal WSReturnRemaningQtyPickorder(string docNoa46, int lineNo) {
            object[] results = this.Invoke("WSReturnRemaningQtyPickorder", new object[] {
                        docNoa46,
                        lineNo});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void WSReturnRemaningQtyPickorderAsync(string docNoa46, int lineNo) {
            this.WSReturnRemaningQtyPickorderAsync(docNoa46, lineNo, null);
        }
        
        /// <remarks/>
        public void WSReturnRemaningQtyPickorderAsync(string docNoa46, int lineNo, object userState) {
            if ((this.WSReturnRemaningQtyPickorderOperationCompleted == null)) {
                this.WSReturnRemaningQtyPickorderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSReturnRemaningQtyPickorderOperationCompleted);
            }
            this.InvokeAsync("WSReturnRemaningQtyPickorder", new object[] {
                        docNoa46,
                        lineNo}, this.WSReturnRemaningQtyPickorderOperationCompleted, userState);
        }
        
        private void OnWSReturnRemaningQtyPickorderOperationCompleted(object arg) {
            if ((this.WSReturnRemaningQtyPickorderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSReturnRemaningQtyPickorderCompleted(this, new WSReturnRemaningQtyPickorderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSFindCustomers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSFindCustomers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WSFindCustomers(string warehouse_Shipment_Noa46) {
            this.Invoke("WSFindCustomers", new object[] {
                        warehouse_Shipment_Noa46});
        }
        
        /// <remarks/>
        public void WSFindCustomersAsync(string warehouse_Shipment_Noa46) {
            this.WSFindCustomersAsync(warehouse_Shipment_Noa46, null);
        }
        
        /// <remarks/>
        public void WSFindCustomersAsync(string warehouse_Shipment_Noa46, object userState) {
            if ((this.WSFindCustomersOperationCompleted == null)) {
                this.WSFindCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSFindCustomersOperationCompleted);
            }
            this.InvokeAsync("WSFindCustomers", new object[] {
                        warehouse_Shipment_Noa46}, this.WSFindCustomersOperationCompleted, userState);
        }
        
        private void OnWSFindCustomersOperationCompleted(object arg) {
            if ((this.WSFindCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSFindCustomersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSWhsPostReceiptLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSWhsPostReceiptLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSWhsPostReceiptLine(int kildetype, string kildeNra46, string itemNoa46, decimal modtagAntal, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime ma45Ha45D, string lot, string vendorLot, int lineNo, string lokation) {
            object[] results = this.Invoke("WSWhsPostReceiptLine", new object[] {
                        kildetype,
                        kildeNra46,
                        itemNoa46,
                        modtagAntal,
                        ma45Ha45D,
                        lot,
                        vendorLot,
                        lineNo,
                        lokation});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSWhsPostReceiptLineAsync(int kildetype, string kildeNra46, string itemNoa46, decimal modtagAntal, System.DateTime ma45Ha45D, string lot, string vendorLot, int lineNo, string lokation) {
            this.WSWhsPostReceiptLineAsync(kildetype, kildeNra46, itemNoa46, modtagAntal, ma45Ha45D, lot, vendorLot, lineNo, lokation, null);
        }
        
        /// <remarks/>
        public void WSWhsPostReceiptLineAsync(int kildetype, string kildeNra46, string itemNoa46, decimal modtagAntal, System.DateTime ma45Ha45D, string lot, string vendorLot, int lineNo, string lokation, object userState) {
            if ((this.WSWhsPostReceiptLineOperationCompleted == null)) {
                this.WSWhsPostReceiptLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSWhsPostReceiptLineOperationCompleted);
            }
            this.InvokeAsync("WSWhsPostReceiptLine", new object[] {
                        kildetype,
                        kildeNra46,
                        itemNoa46,
                        modtagAntal,
                        ma45Ha45D,
                        lot,
                        vendorLot,
                        lineNo,
                        lokation}, this.WSWhsPostReceiptLineOperationCompleted, userState);
        }
        
        private void OnWSWhsPostReceiptLineOperationCompleted(object arg) {
            if ((this.WSWhsPostReceiptLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSWhsPostReceiptLineCompleted(this, new WSWhsPostReceiptLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPostPhysicalInventory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPostPhysicalInventory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSPostPhysicalInventory(string jnlTmpName, string jnlBatchName, string vareNr, string user, string lok, string plac, string lot, decimal qtyCount, string unitOfMeasure, bool undladBogfa155ring, bool fysiskOptalt, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime ma45Ha45D, string vendorBatch, System.DateTime datoTid) {
            object[] results = this.Invoke("WSPostPhysicalInventory", new object[] {
                        jnlTmpName,
                        jnlBatchName,
                        vareNr,
                        user,
                        lok,
                        plac,
                        lot,
                        qtyCount,
                        unitOfMeasure,
                        undladBogfa155ring,
                        fysiskOptalt,
                        ma45Ha45D,
                        vendorBatch,
                        datoTid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSPostPhysicalInventoryAsync(string jnlTmpName, string jnlBatchName, string vareNr, string user, string lok, string plac, string lot, decimal qtyCount, string unitOfMeasure, bool undladBogfa155ring, bool fysiskOptalt, System.DateTime ma45Ha45D, string vendorBatch, System.DateTime datoTid) {
            this.WSPostPhysicalInventoryAsync(jnlTmpName, jnlBatchName, vareNr, user, lok, plac, lot, qtyCount, unitOfMeasure, undladBogfa155ring, fysiskOptalt, ma45Ha45D, vendorBatch, datoTid, null);
        }
        
        /// <remarks/>
        public void WSPostPhysicalInventoryAsync(string jnlTmpName, string jnlBatchName, string vareNr, string user, string lok, string plac, string lot, decimal qtyCount, string unitOfMeasure, bool undladBogfa155ring, bool fysiskOptalt, System.DateTime ma45Ha45D, string vendorBatch, System.DateTime datoTid, object userState) {
            if ((this.WSPostPhysicalInventoryOperationCompleted == null)) {
                this.WSPostPhysicalInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPostPhysicalInventoryOperationCompleted);
            }
            this.InvokeAsync("WSPostPhysicalInventory", new object[] {
                        jnlTmpName,
                        jnlBatchName,
                        vareNr,
                        user,
                        lok,
                        plac,
                        lot,
                        qtyCount,
                        unitOfMeasure,
                        undladBogfa155ring,
                        fysiskOptalt,
                        ma45Ha45D,
                        vendorBatch,
                        datoTid}, this.WSPostPhysicalInventoryOperationCompleted, userState);
        }
        
        private void OnWSPostPhysicalInventoryOperationCompleted(object arg) {
            if ((this.WSPostPhysicalInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPostPhysicalInventoryCompleted(this, new WSPostPhysicalInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPostTransfer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPostTransfer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSPostTransfer(
                    string jnlTmpName, 
                    string jnlBatchName, 
                    string vareNr, 
                    string enhed, 
                    string user, 
                    string fraLok, 
                    string fraPlac, 
                    string fraLot, 
                    string tilLok, 
                    string tilPlac, 
                    string tilLot, 
                    decimal flytAntal, 
                    bool undladBogfa155ring, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime ma45Ha45D, 
                    System.DateTime datoTid, 
                    int udlignendeNr) {
            object[] results = this.Invoke("WSPostTransfer", new object[] {
                        jnlTmpName,
                        jnlBatchName,
                        vareNr,
                        enhed,
                        user,
                        fraLok,
                        fraPlac,
                        fraLot,
                        tilLok,
                        tilPlac,
                        tilLot,
                        flytAntal,
                        undladBogfa155ring,
                        ma45Ha45D,
                        datoTid,
                        udlignendeNr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSPostTransferAsync(
                    string jnlTmpName, 
                    string jnlBatchName, 
                    string vareNr, 
                    string enhed, 
                    string user, 
                    string fraLok, 
                    string fraPlac, 
                    string fraLot, 
                    string tilLok, 
                    string tilPlac, 
                    string tilLot, 
                    decimal flytAntal, 
                    bool undladBogfa155ring, 
                    System.DateTime ma45Ha45D, 
                    System.DateTime datoTid, 
                    int udlignendeNr) {
            this.WSPostTransferAsync(jnlTmpName, jnlBatchName, vareNr, enhed, user, fraLok, fraPlac, fraLot, tilLok, tilPlac, tilLot, flytAntal, undladBogfa155ring, ma45Ha45D, datoTid, udlignendeNr, null);
        }
        
        /// <remarks/>
        public void WSPostTransferAsync(
                    string jnlTmpName, 
                    string jnlBatchName, 
                    string vareNr, 
                    string enhed, 
                    string user, 
                    string fraLok, 
                    string fraPlac, 
                    string fraLot, 
                    string tilLok, 
                    string tilPlac, 
                    string tilLot, 
                    decimal flytAntal, 
                    bool undladBogfa155ring, 
                    System.DateTime ma45Ha45D, 
                    System.DateTime datoTid, 
                    int udlignendeNr, 
                    object userState) {
            if ((this.WSPostTransferOperationCompleted == null)) {
                this.WSPostTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPostTransferOperationCompleted);
            }
            this.InvokeAsync("WSPostTransfer", new object[] {
                        jnlTmpName,
                        jnlBatchName,
                        vareNr,
                        enhed,
                        user,
                        fraLok,
                        fraPlac,
                        fraLot,
                        tilLok,
                        tilPlac,
                        tilLot,
                        flytAntal,
                        undladBogfa155ring,
                        ma45Ha45D,
                        datoTid,
                        udlignendeNr}, this.WSPostTransferOperationCompleted, userState);
        }
        
        private void OnWSPostTransferOperationCompleted(object arg) {
            if ((this.WSPostTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPostTransferCompleted(this, new WSPostTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPostPickOrder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPostPickOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WSPostPickOrder(string lDocNoa46, int lLineNo, int lSourceLineNo, string lItemNo, decimal lQuantity, string lLot, string lBin) {
            this.Invoke("WSPostPickOrder", new object[] {
                        lDocNoa46,
                        lLineNo,
                        lSourceLineNo,
                        lItemNo,
                        lQuantity,
                        lLot,
                        lBin});
        }
        
        /// <remarks/>
        public void WSPostPickOrderAsync(string lDocNoa46, int lLineNo, int lSourceLineNo, string lItemNo, decimal lQuantity, string lLot, string lBin) {
            this.WSPostPickOrderAsync(lDocNoa46, lLineNo, lSourceLineNo, lItemNo, lQuantity, lLot, lBin, null);
        }
        
        /// <remarks/>
        public void WSPostPickOrderAsync(string lDocNoa46, int lLineNo, int lSourceLineNo, string lItemNo, decimal lQuantity, string lLot, string lBin, object userState) {
            if ((this.WSPostPickOrderOperationCompleted == null)) {
                this.WSPostPickOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPostPickOrderOperationCompleted);
            }
            this.InvokeAsync("WSPostPickOrder", new object[] {
                        lDocNoa46,
                        lLineNo,
                        lSourceLineNo,
                        lItemNo,
                        lQuantity,
                        lLot,
                        lBin}, this.WSPostPickOrderOperationCompleted, userState);
        }
        
        private void OnWSPostPickOrderOperationCompleted(object arg) {
            if ((this.WSPostPickOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPostPickOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPostWarehouseShipment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPostWarehouseShipment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSPostWarehouseShipment(string shipmentNoa46) {
            object[] results = this.Invoke("WSPostWarehouseShipment", new object[] {
                        shipmentNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSPostWarehouseShipmentAsync(string shipmentNoa46) {
            this.WSPostWarehouseShipmentAsync(shipmentNoa46, null);
        }
        
        /// <remarks/>
        public void WSPostWarehouseShipmentAsync(string shipmentNoa46, object userState) {
            if ((this.WSPostWarehouseShipmentOperationCompleted == null)) {
                this.WSPostWarehouseShipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPostWarehouseShipmentOperationCompleted);
            }
            this.InvokeAsync("WSPostWarehouseShipment", new object[] {
                        shipmentNoa46}, this.WSPostWarehouseShipmentOperationCompleted, userState);
        }
        
        private void OnWSPostWarehouseShipmentOperationCompleted(object arg) {
            if ((this.WSPostWarehouseShipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPostWarehouseShipmentCompleted(this, new WSPostWarehouseShipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPostLotSplit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPostLotSplit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSPostLotSplit(
                    string jnlTmpName, 
                    string jnlBatchName, 
                    string vareNr, 
                    string unitOfMesure, 
                    string user, 
                    string fraLok, 
                    string fraPlac, 
                    string fraLot, 
                    string tilLok, 
                    string tilPlac, 
                    string tilLot, 
                    decimal flytAntal, 
                    bool undladBogfa155ring, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime ma45Ha45D, 
                    System.DateTime datoTid, 
                    string vendorLot) {
            object[] results = this.Invoke("WSPostLotSplit", new object[] {
                        jnlTmpName,
                        jnlBatchName,
                        vareNr,
                        unitOfMesure,
                        user,
                        fraLok,
                        fraPlac,
                        fraLot,
                        tilLok,
                        tilPlac,
                        tilLot,
                        flytAntal,
                        undladBogfa155ring,
                        ma45Ha45D,
                        datoTid,
                        vendorLot});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSPostLotSplitAsync(
                    string jnlTmpName, 
                    string jnlBatchName, 
                    string vareNr, 
                    string unitOfMesure, 
                    string user, 
                    string fraLok, 
                    string fraPlac, 
                    string fraLot, 
                    string tilLok, 
                    string tilPlac, 
                    string tilLot, 
                    decimal flytAntal, 
                    bool undladBogfa155ring, 
                    System.DateTime ma45Ha45D, 
                    System.DateTime datoTid, 
                    string vendorLot) {
            this.WSPostLotSplitAsync(jnlTmpName, jnlBatchName, vareNr, unitOfMesure, user, fraLok, fraPlac, fraLot, tilLok, tilPlac, tilLot, flytAntal, undladBogfa155ring, ma45Ha45D, datoTid, vendorLot, null);
        }
        
        /// <remarks/>
        public void WSPostLotSplitAsync(
                    string jnlTmpName, 
                    string jnlBatchName, 
                    string vareNr, 
                    string unitOfMesure, 
                    string user, 
                    string fraLok, 
                    string fraPlac, 
                    string fraLot, 
                    string tilLok, 
                    string tilPlac, 
                    string tilLot, 
                    decimal flytAntal, 
                    bool undladBogfa155ring, 
                    System.DateTime ma45Ha45D, 
                    System.DateTime datoTid, 
                    string vendorLot, 
                    object userState) {
            if ((this.WSPostLotSplitOperationCompleted == null)) {
                this.WSPostLotSplitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPostLotSplitOperationCompleted);
            }
            this.InvokeAsync("WSPostLotSplit", new object[] {
                        jnlTmpName,
                        jnlBatchName,
                        vareNr,
                        unitOfMesure,
                        user,
                        fraLok,
                        fraPlac,
                        fraLot,
                        tilLok,
                        tilPlac,
                        tilLot,
                        flytAntal,
                        undladBogfa155ring,
                        ma45Ha45D,
                        datoTid,
                        vendorLot}, this.WSPostLotSplitOperationCompleted, userState);
        }
        
        private void OnWSPostLotSplitOperationCompleted(object arg) {
            if ((this.WSPostLotSplitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPostLotSplitCompleted(this, new WSPostLotSplitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPrintPid", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPrintPid_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string WSPrintPid(string pID, string user) {
            object[] results = this.Invoke("WSPrintPid", new object[] {
                        pID,
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSPrintPidAsync(string pID, string user) {
            this.WSPrintPidAsync(pID, user, null);
        }
        
        /// <remarks/>
        public void WSPrintPidAsync(string pID, string user, object userState) {
            if ((this.WSPrintPidOperationCompleted == null)) {
                this.WSPrintPidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPrintPidOperationCompleted);
            }
            this.InvokeAsync("WSPrintPid", new object[] {
                        pID,
                        user}, this.WSPrintPidOperationCompleted, userState);
        }
        
        private void OnWSPrintPidOperationCompleted(object arg) {
            if ((this.WSPrintPidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPrintPidCompleted(this, new WSPrintPidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPrintPidPrev", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPrintPidPrev_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string WSPrintPidPrev(string pID, string user, string itemnoPr, string quantityPr, string mHDPr, string vendorlotPr, string enhedPr) {
            object[] results = this.Invoke("WSPrintPidPrev", new object[] {
                        pID,
                        user,
                        itemnoPr,
                        quantityPr,
                        mHDPr,
                        vendorlotPr,
                        enhedPr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSPrintPidPrevAsync(string pID, string user, string itemnoPr, string quantityPr, string mHDPr, string vendorlotPr, string enhedPr) {
            this.WSPrintPidPrevAsync(pID, user, itemnoPr, quantityPr, mHDPr, vendorlotPr, enhedPr, null);
        }
        
        /// <remarks/>
        public void WSPrintPidPrevAsync(string pID, string user, string itemnoPr, string quantityPr, string mHDPr, string vendorlotPr, string enhedPr, object userState) {
            if ((this.WSPrintPidPrevOperationCompleted == null)) {
                this.WSPrintPidPrevOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPrintPidPrevOperationCompleted);
            }
            this.InvokeAsync("WSPrintPidPrev", new object[] {
                        pID,
                        user,
                        itemnoPr,
                        quantityPr,
                        mHDPr,
                        vendorlotPr,
                        enhedPr}, this.WSPrintPidPrevOperationCompleted, userState);
        }
        
        private void OnWSPrintPidPrevOperationCompleted(object arg) {
            if ((this.WSPrintPidPrevCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPrintPidPrevCompleted(this, new WSPrintPidPrevCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPrintWarehouseShipment" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPrintWarehouseShipment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WSPrintWarehouseShipment(string shipmentNo) {
            this.Invoke("WSPrintWarehouseShipment", new object[] {
                        shipmentNo});
        }
        
        /// <remarks/>
        public void WSPrintWarehouseShipmentAsync(string shipmentNo) {
            this.WSPrintWarehouseShipmentAsync(shipmentNo, null);
        }
        
        /// <remarks/>
        public void WSPrintWarehouseShipmentAsync(string shipmentNo, object userState) {
            if ((this.WSPrintWarehouseShipmentOperationCompleted == null)) {
                this.WSPrintWarehouseShipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPrintWarehouseShipmentOperationCompleted);
            }
            this.InvokeAsync("WSPrintWarehouseShipment", new object[] {
                        shipmentNo}, this.WSPrintWarehouseShipmentOperationCompleted, userState);
        }
        
        private void OnWSPrintWarehouseShipmentOperationCompleted(object arg) {
            if ((this.WSPrintWarehouseShipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPrintWarehouseShipmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPDFMailOrderConfirmati" +
            "on", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPDFMailOrderConfirmation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WSPDFMailOrderConfirmation(string orderNo, int intValue) {
            this.Invoke("WSPDFMailOrderConfirmation", new object[] {
                        orderNo,
                        intValue});
        }
        
        /// <remarks/>
        public void WSPDFMailOrderConfirmationAsync(string orderNo, int intValue) {
            this.WSPDFMailOrderConfirmationAsync(orderNo, intValue, null);
        }
        
        /// <remarks/>
        public void WSPDFMailOrderConfirmationAsync(string orderNo, int intValue, object userState) {
            if ((this.WSPDFMailOrderConfirmationOperationCompleted == null)) {
                this.WSPDFMailOrderConfirmationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPDFMailOrderConfirmationOperationCompleted);
            }
            this.InvokeAsync("WSPDFMailOrderConfirmation", new object[] {
                        orderNo,
                        intValue}, this.WSPDFMailOrderConfirmationOperationCompleted, userState);
        }
        
        private void OnWSPDFMailOrderConfirmationOperationCompleted(object arg) {
            if ((this.WSPDFMailOrderConfirmationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPDFMailOrderConfirmationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPrintItemLabel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPrintItemLabel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WSPrintItemLabel(string itemNo, int qty, string user) {
            this.Invoke("WSPrintItemLabel", new object[] {
                        itemNo,
                        qty,
                        user});
        }
        
        /// <remarks/>
        public void WSPrintItemLabelAsync(string itemNo, int qty, string user) {
            this.WSPrintItemLabelAsync(itemNo, qty, user, null);
        }
        
        /// <remarks/>
        public void WSPrintItemLabelAsync(string itemNo, int qty, string user, object userState) {
            if ((this.WSPrintItemLabelOperationCompleted == null)) {
                this.WSPrintItemLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPrintItemLabelOperationCompleted);
            }
            this.InvokeAsync("WSPrintItemLabel", new object[] {
                        itemNo,
                        qty,
                        user}, this.WSPrintItemLabelOperationCompleted, userState);
        }
        
        private void OnWSPrintItemLabelOperationCompleted(object arg) {
            if ((this.WSPrintItemLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPrintItemLabelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSPrintBinLabel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSPrintBinLabel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WSPrintBinLabel(string binCode, int qty, string user) {
            this.Invoke("WSPrintBinLabel", new object[] {
                        binCode,
                        qty,
                        user});
        }
        
        /// <remarks/>
        public void WSPrintBinLabelAsync(string binCode, int qty, string user) {
            this.WSPrintBinLabelAsync(binCode, qty, user, null);
        }
        
        /// <remarks/>
        public void WSPrintBinLabelAsync(string binCode, int qty, string user, object userState) {
            if ((this.WSPrintBinLabelOperationCompleted == null)) {
                this.WSPrintBinLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSPrintBinLabelOperationCompleted);
            }
            this.InvokeAsync("WSPrintBinLabel", new object[] {
                        binCode,
                        qty,
                        user}, this.WSPrintBinLabelOperationCompleted, userState);
        }
        
        private void OnWSPrintBinLabelOperationCompleted(object arg) {
            if ((this.WSPrintBinLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSPrintBinLabelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSAddQuantityToPurchaseO" +
            "rder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSAddQuantityToPurchaseOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSAddQuantityToPurchaseOrder(string orderNo, string itemNo, decimal addQuantity, string unitOfMesure) {
            object[] results = this.Invoke("WSAddQuantityToPurchaseOrder", new object[] {
                        orderNo,
                        itemNo,
                        addQuantity,
                        unitOfMesure});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSAddQuantityToPurchaseOrderAsync(string orderNo, string itemNo, decimal addQuantity, string unitOfMesure) {
            this.WSAddQuantityToPurchaseOrderAsync(orderNo, itemNo, addQuantity, unitOfMesure, null);
        }
        
        /// <remarks/>
        public void WSAddQuantityToPurchaseOrderAsync(string orderNo, string itemNo, decimal addQuantity, string unitOfMesure, object userState) {
            if ((this.WSAddQuantityToPurchaseOrderOperationCompleted == null)) {
                this.WSAddQuantityToPurchaseOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSAddQuantityToPurchaseOrderOperationCompleted);
            }
            this.InvokeAsync("WSAddQuantityToPurchaseOrder", new object[] {
                        orderNo,
                        itemNo,
                        addQuantity,
                        unitOfMesure}, this.WSAddQuantityToPurchaseOrderOperationCompleted, userState);
        }
        
        private void OnWSAddQuantityToPurchaseOrderOperationCompleted(object arg) {
            if ((this.WSAddQuantityToPurchaseOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSAddQuantityToPurchaseOrderCompleted(this, new WSAddQuantityToPurchaseOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSCreateWarehouseInbound" +
            "Doc", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSCreateWarehouseInboundDoc_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSCreateWarehouseInboundDoc(string pa45Order) {
            object[] results = this.Invoke("WSCreateWarehouseInboundDoc", new object[] {
                        pa45Order});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSCreateWarehouseInboundDocAsync(string pa45Order) {
            this.WSCreateWarehouseInboundDocAsync(pa45Order, null);
        }
        
        /// <remarks/>
        public void WSCreateWarehouseInboundDocAsync(string pa45Order, object userState) {
            if ((this.WSCreateWarehouseInboundDocOperationCompleted == null)) {
                this.WSCreateWarehouseInboundDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSCreateWarehouseInboundDocOperationCompleted);
            }
            this.InvokeAsync("WSCreateWarehouseInboundDoc", new object[] {
                        pa45Order}, this.WSCreateWarehouseInboundDocOperationCompleted, userState);
        }
        
        private void OnWSCreateWarehouseInboundDocOperationCompleted(object arg) {
            if ((this.WSCreateWarehouseInboundDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSCreateWarehouseInboundDocCompleted(this, new WSCreateWarehouseInboundDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSBlockLotNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSBlockLotNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSBlockLotNo(string pa45ID, string user, System.DateTime datoTid, string reason, bool block) {
            object[] results = this.Invoke("WSBlockLotNo", new object[] {
                        pa45ID,
                        user,
                        datoTid,
                        reason,
                        block});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSBlockLotNoAsync(string pa45ID, string user, System.DateTime datoTid, string reason, bool block) {
            this.WSBlockLotNoAsync(pa45ID, user, datoTid, reason, block, null);
        }
        
        /// <remarks/>
        public void WSBlockLotNoAsync(string pa45ID, string user, System.DateTime datoTid, string reason, bool block, object userState) {
            if ((this.WSBlockLotNoOperationCompleted == null)) {
                this.WSBlockLotNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSBlockLotNoOperationCompleted);
            }
            this.InvokeAsync("WSBlockLotNo", new object[] {
                        pa45ID,
                        user,
                        datoTid,
                        reason,
                        block}, this.WSBlockLotNoOperationCompleted, userState);
        }
        
        private void OnWSBlockLotNoOperationCompleted(object arg) {
            if ((this.WSBlockLotNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSBlockLotNoCompleted(this, new WSBlockLotNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSSetDefaultBin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSSetDefaultBin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSSetDefaultBin(string locationCode, string binCode, string itemNo, string unitCode, bool std) {
            object[] results = this.Invoke("WSSetDefaultBin", new object[] {
                        locationCode,
                        binCode,
                        itemNo,
                        unitCode,
                        std});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSSetDefaultBinAsync(string locationCode, string binCode, string itemNo, string unitCode, bool std) {
            this.WSSetDefaultBinAsync(locationCode, binCode, itemNo, unitCode, std, null);
        }
        
        /// <remarks/>
        public void WSSetDefaultBinAsync(string locationCode, string binCode, string itemNo, string unitCode, bool std, object userState) {
            if ((this.WSSetDefaultBinOperationCompleted == null)) {
                this.WSSetDefaultBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSSetDefaultBinOperationCompleted);
            }
            this.InvokeAsync("WSSetDefaultBin", new object[] {
                        locationCode,
                        binCode,
                        itemNo,
                        unitCode,
                        std}, this.WSSetDefaultBinOperationCompleted, userState);
        }
        
        private void OnWSSetDefaultBinOperationCompleted(object arg) {
            if ((this.WSSetDefaultBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSSetDefaultBinCompleted(this, new WSSetDefaultBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSCreateLotInfoClean", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSCreateLotInfoClean_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool WSCreateLotInfoClean(string lotNra46) {
            object[] results = this.Invoke("WSCreateLotInfoClean", new object[] {
                        lotNra46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WSCreateLotInfoCleanAsync(string lotNra46) {
            this.WSCreateLotInfoCleanAsync(lotNra46, null);
        }
        
        /// <remarks/>
        public void WSCreateLotInfoCleanAsync(string lotNra46, object userState) {
            if ((this.WSCreateLotInfoCleanOperationCompleted == null)) {
                this.WSCreateLotInfoCleanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSCreateLotInfoCleanOperationCompleted);
            }
            this.InvokeAsync("WSCreateLotInfoClean", new object[] {
                        lotNra46}, this.WSCreateLotInfoCleanOperationCompleted, userState);
        }
        
        private void OnWSCreateLotInfoCleanOperationCompleted(object arg) {
            if ((this.WSCreateLotInfoCleanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSCreateLotInfoCleanCompleted(this, new WSCreateLotInfoCleanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse:WSCreateSalesCommentLine" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", ResponseElementName="WSCreateSalesCommentLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/BalanceWarehouse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WSCreateSalesCommentLine(int documentType, string documentNo, string commentTxt) {
            this.Invoke("WSCreateSalesCommentLine", new object[] {
                        documentType,
                        documentNo,
                        commentTxt});
        }
        
        /// <remarks/>
        public void WSCreateSalesCommentLineAsync(int documentType, string documentNo, string commentTxt) {
            this.WSCreateSalesCommentLineAsync(documentType, documentNo, commentTxt, null);
        }
        
        /// <remarks/>
        public void WSCreateSalesCommentLineAsync(int documentType, string documentNo, string commentTxt, object userState) {
            if ((this.WSCreateSalesCommentLineOperationCompleted == null)) {
                this.WSCreateSalesCommentLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSCreateSalesCommentLineOperationCompleted);
            }
            this.InvokeAsync("WSCreateSalesCommentLine", new object[] {
                        documentType,
                        documentNo,
                        commentTxt}, this.WSCreateSalesCommentLineOperationCompleted, userState);
        }
        
        private void OnWSCreateSalesCommentLineOperationCompleted(object arg) {
            if ((this.WSCreateSalesCommentLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSCreateSalesCommentLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WsReturnServerInfoCompletedEventHandler(object sender, WsReturnServerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WsReturnServerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WsReturnServerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sqlServerName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string sqlServerInstance {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string databaseUserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string databaseCompany {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string languageCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string webURL {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSEndProgramCodeCompletedEventHandler(object sender, WSEndProgramCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSEndProgramCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSEndProgramCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnGeneralSetupCompletedEventHandler(object sender, WSReturnGeneralSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnGeneralSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnGeneralSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string soundError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string soundOK {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSLotInfoExistsCompletedEventHandler(object sender, WSLotInfoExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSLotInfoExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSLotInfoExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSLotInfoUsedCompletedEventHandler(object sender, WSLotInfoUsedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSLotInfoUsedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSLotInfoUsedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPIDExistsCompletedEventHandler(object sender, WSPIDExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSPIDExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSPIDExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSItemExistsCompletedEventHandler(object sender, WSItemExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSItemExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSItemExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSBinExistsCompletedEventHandler(object sender, WSBinExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSBinExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSBinExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSBinIsEmptyCompletedEventHandler(object sender, WSBinIsEmptyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSBinIsEmptyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSBinIsEmptyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSItemQaSampleCompletedEventHandler(object sender, WSItemQaSampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSItemQaSampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSItemQaSampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal sampleQty {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string sampleUnitOfMeasure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSItemUsesTrackingCompletedEventHandler(object sender, WSItemUsesTrackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSItemUsesTrackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSItemUsesTrackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSItemUsesMhdTrackingCompletedEventHandler(object sender, WSItemUsesMhdTrackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSItemUsesMhdTrackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSItemUsesMhdTrackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnItemDescriptionCompletedEventHandler(object sender, WSReturnItemDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnItemDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnItemDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnItemUnitOfMesureCompletedEventHandler(object sender, WSReturnItemUnitOfMesureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnItemUnitOfMesureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnItemUnitOfMesureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnLotInfoCompletedEventHandler(object sender, WSReturnLotInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnLotInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnLotInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bin {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string itemNoa46 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal quantity {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public System.DateTime expiredate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string unitOfMesure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string vendorLot {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnMhdAndBinFromLotCompletedEventHandler(object sender, WSReturnMhdAndBinFromLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnMhdAndBinFromLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnMhdAndBinFromLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bin {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.DateTime mHD {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal qty {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public int appEntry {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public System.DateTime regDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnItemNoCompletedEventHandler(object sender, WSReturnItemNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnItemNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnItemNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnPrinterInfoCompletedEventHandler(object sender, WSReturnPrinterInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnPrinterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnPrinterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string printerName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSSetPrinterCompletedEventHandler(object sender, WSSetPrinterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSSetPrinterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSSetPrinterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSGetBinContentInformationCompletedEventHandler(object sender, WSGetBinContentInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSGetBinContentInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSGetBinContentInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSGetItemBinInformationCompletedEventHandler(object sender, WSGetItemBinInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSGetItemBinInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSGetItemBinInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSGetItemCrossRefCompletedEventHandler(object sender, WSGetItemCrossRefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSGetItemCrossRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSGetItemCrossRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSInventoryAllowedCompletedEventHandler(object sender, WSInventoryAllowedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSInventoryAllowedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSInventoryAllowedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSIsFirstInventoryCompletedEventHandler(object sender, WSIsFirstInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSIsFirstInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSIsFirstInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnSalespersonExtDocNoCompletedEventHandler(object sender, WSReturnSalespersonExtDocNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnSalespersonExtDocNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnSalespersonExtDocNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnRemaningQuantityCompletedEventHandler(object sender, WSReturnRemaningQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnRemaningQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnRemaningQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnNewPIDCompletedEventHandler(object sender, WSReturnNewPIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnNewPIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnNewPIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSReturnRemaningQtyPickorderCompletedEventHandler(object sender, WSReturnRemaningQtyPickorderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSReturnRemaningQtyPickorderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSReturnRemaningQtyPickorderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSFindCustomersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSWhsPostReceiptLineCompletedEventHandler(object sender, WSWhsPostReceiptLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSWhsPostReceiptLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSWhsPostReceiptLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPostPhysicalInventoryCompletedEventHandler(object sender, WSPostPhysicalInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSPostPhysicalInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSPostPhysicalInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPostTransferCompletedEventHandler(object sender, WSPostTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSPostTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSPostTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPostPickOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPostWarehouseShipmentCompletedEventHandler(object sender, WSPostWarehouseShipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSPostWarehouseShipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSPostWarehouseShipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPostLotSplitCompletedEventHandler(object sender, WSPostLotSplitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSPostLotSplitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSPostLotSplitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPrintPidCompletedEventHandler(object sender, WSPrintPidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSPrintPidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSPrintPidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPrintPidPrevCompletedEventHandler(object sender, WSPrintPidPrevCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSPrintPidPrevCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSPrintPidPrevCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPrintWarehouseShipmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPDFMailOrderConfirmationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPrintItemLabelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSPrintBinLabelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSAddQuantityToPurchaseOrderCompletedEventHandler(object sender, WSAddQuantityToPurchaseOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSAddQuantityToPurchaseOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSAddQuantityToPurchaseOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSCreateWarehouseInboundDocCompletedEventHandler(object sender, WSCreateWarehouseInboundDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSCreateWarehouseInboundDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSCreateWarehouseInboundDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSBlockLotNoCompletedEventHandler(object sender, WSBlockLotNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSBlockLotNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSBlockLotNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSSetDefaultBinCompletedEventHandler(object sender, WSSetDefaultBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSSetDefaultBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSSetDefaultBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSCreateLotInfoCleanCompletedEventHandler(object sender, WSCreateLotInfoCleanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSCreateLotInfoCleanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSCreateLotInfoCleanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WSCreateSalesCommentLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591